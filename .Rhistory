node1 = c(1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L,
3L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 5L, 5L, 5L, 5L, 6L, 6L, 6L, 6L,
7L, 7L, 8L, 8L, 8L, 8L, 9L, 9L, 9L, 10L, 11L, 11L, 12L, 13L,
13L, 13L, 13L, 14L, 14L, 14L, 14L, 15L, 15L, 15L, 16L, 16L, 16L,
16L, 16L, 16L, 17L, 17L, 18L, 19L, 19L, 19L, 20L, 20L, 20L, 20L,
20L, 20L, 21L, 21L, 21L, 21L, 21L, 22L, 22L, 22L, 22L, 22L, 22L,
22L, 22L, 22L, 23L, 23L, 23L, 24L, 24L, 24L, 24L, 25L, 25L, 25L,
26L, 26L, 26L, 26L, 26L, 26L, 27L, 27L, 27L, 27L, 27L, 28L, 28L,
28L, 28L, 29L, 29L, 29L, 30L, 30L, 31L, 32L, 32L, 32L, 32L, 32L,
33L, 34L, 34L, 34L, 34L, 34L, 35L, 35L, 35L, 35L, 35L, 35L, 36L,
37L, 37L, 37L, 38L, 38L, 38L, 38L, 39L, 39L, 40L, 40L, 43L, 43L,
44L, 45L, 45L, 45L, 45L, 45L, 45L, 46L, 46L, 46L, 47L, 47L, 48L,
48L, 48L, 48L, 49L, 49L, 49L, 49L, 49L, 50L, 51L, 51L, 51L, 51L,
51L, 51L, 52L, 52L, 53L, 53L, 53L, 54L, 54L, 54L, 55L, 56L, 57L,
57L, 57L, 58L, 58L, 58L, 59L, 59L, 59L, 59L, 60L, 60L, 60L, 60L,
61L, 61L, 61L, 61L, 61L, 61L, 61L, 62L, 62L, 63L, 63L, 63L, 63L,
63L, 63L, 63L, 63L, 64L, 64L, 64L, 65L, 65L, 65L, 65L, 65L, 67L,
67L, 67L, 69L, 69L, 69L, 70L, 71L, 71L, 71L, 71L, 71L, 72L, 72L,
72L, 72L, 72L, 73L, 73L, 73L, 74L, 74L, 74L, 74L, 75L, 75L, 77L,
77L, 78L, 78L, 80L, 82L, 82L, 82L, 82L, 82L, 83L, 83L, 83L, 84L,
84L, 84L, 85L, 86L, 86L, 86L, 87L, 88L, 90L, 90L, 90L, 90L, 90L,
90L, 91L, 91L, 91L, 92L, 92L, 92L, 92L, 92L, 93L, 93L, 93L, 94L,
94L, 94L, 94L, 94L, 94L, 95L, 95L, 95L, 96L, 96L, 96L, 97L, 99L,
100L, 101L, 103L, 104L, 104L, 104L, 104L, 104L, 104L, 104L, 104L,
104L, 105L, 105L, 105L, 106L, 106L, 106L, 106L, 106L, 106L, 107L,
107L, 107L, 107L, 107L, 107L, 108L, 108L, 108L, 109L, 109L, 109L,
110L, 111L, 111L, 111L, 111L, 113L, 113L, 113L, 113L, 113L, 116L,
116L, 116L, 116L, 116L, 116L, 116L, 117L, 117L, 117L, 117L, 118L,
118L, 118L, 118L, 118L, 119L, 119L, 119L, 120L, 120L, 122L, 122L,
122L, 122L, 122L, 123L, 125L, 125L, 125L, 125L, 126L, 126L, 126L,
127L, 127L, 127L, 127L, 127L, 128L, 128L, 128L, 128L, 130L, 130L,
131L, 132L, 132L, 132L, 133L, 133L, 133L, 133L, 133L, 133L, 133L,
134L, 134L, 134L, 134L, 134L, 134L, 135L, 135L, 136L, 137L, 137L,
137L, 138L, 138L, 139L, 139L, 139L, 139L, 140L, 140L, 141L, 141L,
141L, 142L, 143L, 143L, 143L, 144L, 144L, 144L, 144L, 145L, 145L,
145L, 148L, 148L, 149L, 149L, 149L, 150L, 150L, 150L, 151L, 153L,
153L, 154L, 155L, 158L, 158L, 158L, 158L, 158L, 159L, 159L, 159L,
159L, 159L, 159L, 160L, 160L, 160L, 161L, 161L, 161L, 161L, 161L,
161L, 161L, 162L, 162L, 162L, 163L, 163L, 164L, 164L, 164L, 164L,
165L, 166L, 166L, 166L, 167L, 167L, 167L, 167L, 167L, 168L, 170L,
172L, 172L, 172L, 172L, 172L, 173L, 173L, 173L, 173L, 173L, 174L,
174L, 175L, 175L, 177L, 177L, 179L, 179L, 179L, 180L, 184L, 184L,
185L, 186L, 186L, 186L, 186L, 186L, 187L, 187L, 188L, 189L, 189L,
190L, 191L, 191L, 191L, 191L, 191L, 192L, 192L, 192L, 192L, 192L,
192L, 194L, 194L, 194L, 195L, 195L, 195L, 195L, 195L, 196L, 196L,
196L, 197L, 197L, 197L, 197L, 198L, 198L, 198L, 199L, 199L, 199L,
199L, 200L, 201L, 201L, 201L, 201L, 202L, 203L, 203L, 203L, 203L,
203L, 205L, 207L, 207L, 207L, 207L, 207L, 207L, 208L, 208L, 208L,
208L, 208L, 209L, 209L, 210L, 210L, 210L, 210L, 210L, 210L, 211L,
211L, 212L, 212L, 212L, 213L, 213L, 214L, 214L, 215L, 215L, 216L,
217L, 218L, 218L, 219L, 222L, 222L, 223L, 224L, 224L, 224L, 225L,
226L, 226L, 227L, 229L, 229L, 230L, 230L, 230L, 230L, 231L, 231L,
231L, 231L, 232L, 233L, 233L, 233L, 235L, 236L, 236L, 237L, 238L,
240L, 241L, 241L, 241L, 242L, 242L, 242L, 242L, 242L, 242L, 243L,
243L, 243L, 243L, 243L, 244L, 244L, 244L, 245L, 245L, 245L, 245L,
245L, 246L, 246L, 246L, 246L, 246L, 246L, 247L, 247L, 247L, 248L,
248L, 248L, 248L, 248L, 249L, 249L, 249L, 249L, 250L, 250L, 250L,
250L, 250L, 250L, 250L, 251L, 251L, 251L, 251L, 251L, 252L, 252L,
252L, 252L, 253L, 253L, 253L, 253L, 254L, 254L, 255L, 255L, 255L,
255L, 256L, 256L, 256L, 257L, 257L, 257L, 258L, 258L, 258L, 258L,
259L, 259L, 260L, 260L, 261L, 262L, 262L, 262L, 262L, 262L, 263L,
263L, 263L, 263L, 264L, 264L, 264L, 264L, 265L, 266L, 266L, 267L,
268L, 269L, 269L, 270L, 270L, 270L, 271L, 271L, 273L, 273L, 273L,
273L, 274L, 275L, 276L, 277L, 278L, 279L, 284L, 285L, 286L)
node2 = c(3L, 7L, 11L, 63L, 66L, 258L, 5L, 6L, 10L, 12L, 80L, 5L, 6L,
7L, 13L, 66L, 6L, 8L, 9L, 104L, 108L, 119L, 124L, 6L, 13L, 80L,
81L, 7L, 8L, 9L, 10L, 8L, 11L, 11L, 105L, 108L, 259L, 10L, 119L,
120L, 12L, 258L, 259L, 80L, 59L, 60L, 66L, 81L, 16L, 17L, 18L,
87L, 17L, 71L, 79L, 18L, 82L, 87L, 131L, 141L, 146L, 71L, 87L,
131L, 27L, 28L, 55L, 24L, 36L, 43L, 232L, 235L, 236L, 22L, 23L,
25L, 26L, 31L, 24L, 25L, 30L, 31L, 34L, 36L, 40L, 41L, 43L, 25L,
26L, 33L, 31L, 32L, 36L, 235L, 28L, 30L, 33L, 31L, 32L, 33L,
107L, 114L, 194L, 28L, 33L, 194L, 197L, 206L, 29L, 30L, 33L,
55L, 30L, 38L, 55L, 38L, 41L, 32L, 113L, 114L, 230L, 235L, 237L,
194L, 37L, 38L, 40L, 41L, 42L, 40L, 42L, 43L, 185L, 189L, 232L,
43L, 38L, 39L, 42L, 39L, 41L, 55L, 223L, 223L, 227L, 42L, 43L,
232L, 236L, 169L, 46L, 47L, 50L, 61L, 267L, 278L, 47L, 49L, 85L,
61L, 85L, 50L, 251L, 265L, 267L, 85L, 86L, 125L, 127L, 129L,
267L, 52L, 53L, 54L, 56L, 57L, 58L, 53L, 56L, 54L, 55L, 223L,
57L, 223L, 227L, 223L, 58L, 58L, 226L, 227L, 209L, 220L, 226L,
60L, 63L, 64L, 66L, 64L, 69L, 73L, 81L, 62L, 63L, 67L, 68L, 85L,
278L, 284L, 67L, 68L, 64L, 66L, 68L, 256L, 258L, 269L, 284L,
287L, 65L, 68L, 69L, 67L, 68L, 69L, 83L, 89L, 68L, 83L, 85L,
73L, 88L, 89L, 76L, 74L, 77L, 79L, 84L, 87L, 73L, 75L, 77L, 78L,
88L, 78L, 81L, 88L, 75L, 76L, 77L, 79L, 77L, 78L, 84L, 88L, 80L,
81L, 81L, 83L, 85L, 86L, 87L, 146L, 85L, 87L, 89L, 87L, 88L,
89L, 86L, 125L, 134L, 146L, 89L, 89L, 91L, 95L, 96L, 99L, 101L,
102L, 97L, 99L, 102L, 94L, 95L, 98L, 101L, 103L, 94L, 98L, 216L,
98L, 103L, 211L, 213L, 215L, 216L, 96L, 98L, 101L, 98L, 100L,
102L, 99L, 101L, 102L, 103L, 215L, 108L, 109L, 110L, 112L, 113L,
115L, 119L, 124L, 229L, 108L, 111L, 259L, 109L, 111L, 112L, 201L,
204L, 254L, 109L, 113L, 114L, 115L, 194L, 204L, 110L, 111L, 112L,
112L, 115L, 204L, 112L, 112L, 254L, 259L, 279L, 114L, 115L, 229L,
233L, 237L, 117L, 119L, 122L, 229L, 231L, 234L, 239L, 118L, 119L,
120L, 122L, 120L, 122L, 123L, 168L, 170L, 120L, 124L, 229L, 121L,
123L, 161L, 168L, 170L, 186L, 239L, 170L, 127L, 134L, 140L, 147L,
134L, 141L, 146L, 128L, 129L, 136L, 138L, 140L, 130L, 138L, 140L,
152L, 138L, 152L, 141L, 143L, 145L, 151L, 135L, 137L, 139L, 140L,
144L, 149L, 152L, 135L, 137L, 140L, 141L, 146L, 147L, 137L, 140L,
138L, 141L, 149L, 154L, 142L, 152L, 142L, 143L, 144L, 152L, 147L,
152L, 146L, 148L, 154L, 152L, 144L, 145L, 151L, 149L, 150L, 151L,
153L, 151L, 153L, 156L, 154L, 157L, 150L, 154L, 157L, 153L, 155L,
157L, 153L, 155L, 156L, 157L, 156L, 167L, 177L, 181L, 182L, 183L,
161L, 162L, 163L, 169L, 170L, 171L, 173L, 174L, 177L, 163L, 164L,
170L, 171L, 175L, 179L, 186L, 163L, 169L, 178L, 175L, 178L, 173L,
175L, 179L, 180L, 175L, 175L, 178L, 181L, 172L, 182L, 184L, 188L,
190L, 170L, 171L, 179L, 180L, 182L, 187L, 188L, 174L, 175L, 176L,
177L, 180L, 175L, 176L, 176L, 178L, 180L, 182L, 180L, 186L, 187L,
182L, 189L, 190L, 189L, 187L, 190L, 232L, 236L, 239L, 188L, 190L,
190L, 190L, 232L, 232L, 192L, 193L, 203L, 244L, 247L, 193L, 196L,
200L, 203L, 205L, 206L, 197L, 199L, 204L, 197L, 199L, 200L, 202L,
205L, 199L, 200L, 203L, 199L, 202L, 205L, 206L, 199L, 201L, 203L,
200L, 201L, 203L, 204L, 205L, 203L, 204L, 254L, 266L, 205L, 241L,
244L, 252L, 262L, 266L, 206L, 208L, 209L, 210L, 220L, 222L, 226L,
210L, 212L, 219L, 221L, 222L, 220L, 226L, 211L, 213L, 216L, 217L,
220L, 221L, 213L, 216L, 218L, 219L, 222L, 215L, 221L, 215L, 218L,
218L, 221L, 217L, 220L, 219L, 221L, 221L, 225L, 226L, 227L, 225L,
226L, 228L, 226L, 227L, 228L, 228L, 233L, 234L, 235L, 236L, 237L,
238L, 233L, 234L, 238L, 239L, 236L, 234L, 237L, 238L, 236L, 238L,
239L, 238L, 239L, 251L, 244L, 262L, 268L, 243L, 251L, 260L, 261L,
263L, 285L, 245L, 248L, 261L, 285L, 289L, 247L, 249L, 268L, 246L,
255L, 261L, 267L, 289L, 257L, 267L, 278L, 284L, 287L, 289L, 249L,
270L, 280L, 253L, 257L, 285L, 289L, 290L, 268L, 270L, 286L, 288L,
257L, 269L, 273L, 274L, 282L, 287L, 290L, 255L, 260L, 261L, 265L,
272L, 262L, 266L, 273L, 274L, 262L, 285L, 288L, 290L, 266L, 279L,
261L, 265L, 267L, 272L, 258L, 269L, 282L, 287L, 289L, 290L, 259L,
273L, 281L, 282L, 279L, 281L, 263L, 276L, 272L, 266L, 268L, 274L,
288L, 290L, 276L, 285L, 286L, 288L, 270L, 271L, 275L, 286L, 267L,
273L, 279L, 278L, 288L, 282L, 287L, 275L, 280L, 286L, 283L, 286L,
274L, 279L, 281L, 282L, 290L, 280L, 286L, 280L, 284L, 281L, 287L,
288L, 288L)
edges = tibble(node1, node2)
dim(edges)
edges
d = sapply(1:R, function(k) sum(edges==k))
A = diag(0,R)
for (i in 1:nrow(edges)) {
A[ edges$node1[i], edges$node2[i] ] = 1
A[ edges$node2[i], edges$node1[i] ] = 1
}
Q = diag(d)-A
W = diag(1/d) %*% A
e = eigen( Q)
X = e$vectors[, -R]
Lhalfinv = diag( 1/ sqrt(e$values[-R]))
eta = matrix(rnorm((R-1)*10000), nrow=R-1)
phi = X %*% Lhalfinv %*% eta
phi_hood = W %*% phi
eps      = phi - phi_hood # =(I-W)phi
list(cond_var = apply(eps,1,var),
ICAR_cond_var = 1/d,
should_be_zero = apply(eps,1,var) - 1/d)
list(cond_var = apply(eps,1,var),
ICAR_cond_var = 1/d,
should_be_zero = round(apply(eps,1,var) - 1/d, 4))
dim(eps)
apply(eps,1,mean)
range(apply(eps,1,mean))
k = 5
plot(density(eps[k,], adj=1.5), main='1', lwd=4)
curve(dnorm(x,0,sqrt(1/d[k])), from=-3, to=+3, col='red', lwd=2, add=TRUE)
k = 115
plot(density(eps[k,], adj=1.5), main=k, lwd=4)
curve(dnorm(x,0,sqrt(1/d[k])), from=-3, to=+3, col='red', lwd=2, add=TRUE)
k = 12
plot(density(eps[k,], adj=1.5), main=k, lwd=4)
curve(dnorm(x,0,sqrt(1/d[k])), from=-3, to=+3, col='red', lwd=2, add=TRUE)
index = seq(-3,3,.01)
antilogit = 1/(1+exp(-index))
plot(index, antilogit)
plot(index, antilogit, ylab='antilogit of index')
plot(index, antilogit, ylab='antilogit of index', type='l')
index = seq(-4,4,.01)
plot(index, antilogit, ylab='antilogit of index', type='l')
antilogit = 1/(1+exp(-index))
plot(index, antilogit, ylab='antilogit of index', type='l')
abline(h=0.5,v=0, lty=2)
index
segments(index[451], 0 index[451], antilogit[451], col='red')
segments(index[451], 0, index[451], antilogit[451], col='red')
segments(index[451], 0 index[451], antilogit[451], col=
segments(-5, antilogit[451], index[451], antilogit[451],col='red')
ITA = read.csv(file='ITA-Female-1980.csv')
setwd("~/GitHub/TOPALS")
ITA = read.csv(file='ITA-Female-1980.csv')
ITA
e0(ITA$logmx)
knitr::opts_chunk$set(echo = TRUE)
e0 = function(logmx) {
x = c(seq(logmx)-1, length(logmx))   # 0,1,...,start open interv
mx = exp(c(logmx, tail(logmx,1)))  # add open interval
nx = c( rep(1, length(logmx)), Inf)
px = exp(-mx * nx)
lx = c(1,cumprod( head(px,-1)))  # for 0,1,...,start open interv
ax = 1/mx - 1*(px/(1-px))
ax[1] = 0.1
dx = -diff(c(lx,0))
Lx = lx*px + dx*ax
return( sum(Lx))
}
e0 = function(logmx) {
x = c(seq(logmx)-1, length(logmx))   # 0,1,...,start open interv
mx = exp(c(logmx, tail(logmx,1)))  # add open interval
nx = c( rep(1, length(logmx)), Inf)
px = exp(-mx * nx)
lx = c(1,cumprod( head(px,-1)))  # for 0,1,...,start open interv
ax = 1/mx - 1*(px/(1-px))
ax[1] = 0.1
dx = -diff(c(lx,0))
Lx = lx*px + dx*ax
return( sum(Lx))
}
e0(ITA$logmx)
head(ITA)
std =c(-3.8933, -5.7776, -6.8474, -7.3298, -7.4519, -7.4408, -7.4807,
-7.5845, -7.7219, -7.8628, -7.9771, -8.041, -8.0568, -8.0329,
-7.9779, -7.9004, -7.8088, -7.7101, -7.6113, -7.5195, -7.4415,
-7.3823, -7.3393, -7.308, -7.2837, -7.2619, -7.238, -7.2082,
-7.1711, -7.1264, -7.0735, -7.0118, -6.9414, -6.8648, -6.7849,
-6.7047, -6.6272, -6.5544, -6.4845, -6.4147, -6.3423, -6.2644,
-6.1791, -6.0872, -5.9904, -5.8903, -5.7887, -5.6869, -5.586,
-5.4866, -5.3895, -5.2953, -5.205, -5.1186, -5.0347, -4.9513,
-4.8664, -4.778, -4.6847, -4.5877, -4.4887, -4.3895, -4.2918,
-4.1969, -4.1041, -4.0122, -3.9199, -3.8261, -3.7297, -3.6303,
-3.5279, -3.4221, -3.3129, -3.2004, -3.0861, -2.9716, -2.8589,
-2.7497, -2.6457, -2.5482, -2.4556, -2.3659, -2.2771, -2.187,
-2.0942, -1.9991, -1.9027, -1.8062, -1.7105, -1.6164, -1.5242,
-1.434, -1.3458, -1.2596, -1.1758, -1.0958, -1.0212, -0.9535,
-0.8944, -0.8455)
data.frame(age=0:99,std)
z = data.frame(age=0:99,std)
write.csv(z, file='female-std.csv', row.names = FALSE)
std = read.csv('female-std.csv')$std
std
bb = c(0,1,seq(5,100,5))  # last group is [95,100)
N = agg(ITA$N, bounds=bb)
agg = function(x,bounds) {
age = seq(x)-1  # 0,1,2,...
L = head(bounds,-1)
U = tail(bounds,-1)
as.vector( tapply( x, cut(age, breaks=bounds, right=FALSE), sum))
}
bb = c(0,1,seq(5,100,5))  # last group is [95,100)
N = agg(ITA$N, bounds=bb)
N
bb = c(0,1,seq(5,100,5))  # last group is [95,100)
N = agg(ITA$N, bounds=bb)
D = agg(ITA$D, bounds=bb)
names(N) = names(D) = head(bb,-1)
N
D
e0(ITA$logmx)
e0(ITA$logmx[1:100])
fit$logm
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splines)
# include the fitting function
source('TOPALS_fit.R', echo=TRUE)
# read the single-year Italian female 1980 HMD data ages 0,1,...110+
ITA = read.csv('ITA-Female-1980.csv')
# read the std schedule (log rates for CAN females 1959, ages 0...99)
std = read.csv('female-std.csv')$std
## age-grouping function
agg = function(x,bounds) {
age = seq(x)-1  # 0,1,2,...
L = head(bounds,-1)
U = tail(bounds,-1)
as.vector( tapply( x, cut(age, breaks=bounds, right=FALSE), sum))
}
bb = c(0,1,seq(5,100,5))  # last group is [95,100)
N = agg(ITA$N, bounds=bb)
D = agg(ITA$D, bounds=bb)
names(N) = names(D) = head(bb,-1)
show_topals = function(fit, emphasize_sd=FALSE, hue='red') {
df_grouped = data.frame(
L = head( fit$age_group_bounds, -1),
U = tail( fit$age_group_bounds, -1),
N = fit$N,
D = fit$D
) %>%
mutate(logmx_obs = log(D/N))
df_single  = data.frame(
age=  seq(fit$std) - .50,  # 0.5, 1.5, ...
std = fit$std,
logmx_true = ITA$logmx[1:100],
logmx_fit  = fit$logm
)
this_plot =
ggplot(data = df_single, aes(x=age,y=logmx_true)) +
labs(x='Age',y='Log Mortality Rate',
title='Italy Females 1980',
subtitle = paste(sum(fit$D),'deaths to',round(sum(fit$N)),'women')) +
scale_x_continuous(breaks=c(0,1,seq(5,100,5)),minor_breaks = NULL) +
scale_y_continuous(limits=c(-10,0),breaks=seq(-10,0,2),minor_breaks = NULL) +
theme_bw()
if (!emphasize_sd) {
this_plot = this_plot +
geom_line(aes(x=age,y=std), color='black', lwd=0.5) +
geom_line(aes(x=age,y=logmx_fit), color=hue, lwd=3, alpha=.40) +
geom_segment(data=df_grouped,aes(x=L,xend=U,
y=logmx_obs,
yend=logmx_obs),
color=hue,lwd=1.5, alpha=.90) +
geom_point(size=0.60, alpha=.70)
} else {
sd = sqrt( diag( fit$B %*% fit$covar %*% t(fit$B)))
factor = qnorm(.90)
df_errors = data.frame(age = seq(fit$std) - 0.50,
L = fit$logm - factor * sd,
H = fit$logm + factor * sd)
this_plot = this_plot +
geom_segment(data=df_errors,
aes(x=age, xend=age, y=L, yend=H), lwd=0.5, color=hue,
inherit.aes = FALSE)
}
print(this_plot)
} # show_topals
fit = TOPALS_fit(N,D,std,
age_group_bounds = bb,
details=TRUE)
show_topals(fit)
sd_lambda = sqrt( diag ( fit$B %*% fit$covar %*% t(fit$B) ) )
plot(0:99, sd_lambda, type='h', xlab='age', ylim=range(0,sd_lambda),
main='SD of estimated log mortality')
show_topals(fit, emphasize_sd = TRUE, hue='red')
fit$alpha
C          = t(chol( fit$covar) )
# generate 1000 draws from the log mortality schedule
lambda_sim = fit$std + fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
# plot the first 10 draws
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws')
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
e0 = function(logmx) {
x = c(seq(logmx)-1, length(logmx))   # 0,1,...,start open interv
mx = exp(c(logmx, tail(logmx,1)))  # add open interval
nx = c( rep(1, length(logmx)), Inf)
px = exp(-mx * nx)
lx = c(1,cumprod( head(px,-1)))  # for 0,1,...,start open interv
ax = 1/mx - 1*(px/(1-px))
ax[1] = 0.1
dx = -diff(c(lx,0))
Lx = lx*px + dx*ax
return( sum(Lx))
}
plot(density( apply(lambda_sim,2, e0), adj=1.5))
plot(density( apply(lambda_sim,2, e0), adj=1.5),
xlim=c(77,78))
abline(v=77.41, lty=2)
plot(density( apply(lambda_sim,2, e0), adj=1.5),
xlim=c(77,78), main='Approx Uncertainty in Estimated Life Expectancy')
abline(v=77.41, lty=2)
plot(density(esim , adj=1.5), xlim=c(77,78),
main='Approx Uncertainty in Estimated Life Expectancy')
esim = apply(lambda_sim,2, e0)
plot(density(esim , adj=1.5), xlim=c(77,78),
main='Approx Uncertainty in Estimated Life Expectancy')
abline(v=77.42, lty=2)  # HMD life exp value
mean(esim)
target_pop = 10000
Nsmall = N * target_pop/sum(N)
Dsmall = rpois( length(Nsmall), Nsmall * D/N)
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
fit
target_pop = 10000
Nsmall = N * target_pop/sum(N)
Dsmall = rpois( length(Nsmall), Nsmall * D/N)
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
show_topals(fit, hue='purple')
show_topals(fit, emphasize_sd = TRUE, hue='purple')
# generate 1000 draws from the log mortality schedule
lambda_sim = fit$std + fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
# plot the first 10 draws
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
lambda_sim = fit$std + fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
lambda_sim = fit$std + fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
target_pop = 1000
Nsmall = N * target_pop/sum(N)
Dsmall = rpois( length(Nsmall), Nsmall * D/N)
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
show_topals(fit, hue='purple')
show_topals(fit, emphasize_sd = TRUE, hue='purple')
# generate 1000 draws from the log mortality schedule
lambda_sim = fit$std + fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
# plot the first 10 draws
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
target_pop = 10000
Nsmall = N * target_pop/sum(N)
Dsmall = rpois( length(Nsmall), Nsmall * D/N)
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
show_topals(fit, hue='purple')
show_topals(fit, emphasize_sd = TRUE, hue='purple')
esim = apply(lambda_sim,2, e0)
plot(density(esim , adj=1.5), xlim=c(77,78),
xlab='Life Exp at Birth',
main='Approx Uncertainty in Estimated Life Expectancy')
abline(v=77.42, lty=2)  # HMD life exp value
esim = apply(lambda_sim,2, e0)
plot(density(esim , adj=1.5),
xlab='Life Exp at Birth',
main='Approx Uncertainty in Estimated Life Expectancy')
abline(v=77.42, lty=2)  # HMD life exp value
target_pop = 10000
Nsmall = N * target_pop/sum(N)
Dsmall = rpois( length(Nsmall), Nsmall * D/N)
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
fit
show_topals(fit, hue='purple')
show_topals(fit, emphasize_sd = TRUE, hue='purple')
# generate 1000 draws from the log mortality schedule
C = t(chol( fit$covar) )
lambda_sim = fit$std +
fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
# plot the first 10 draws
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
esim = apply(lambda_sim,2, e0)
plot(density(esim , adj=1.5),
xlab='Life Exp at Birth',
main='Approx Uncertainty in Estimated Life Expectancy')
abline(v=77.42, lty=2)  # HMD life exp value
target_pop = 1000
Nsmall = N * target_pop/sum(N)
Dsmall = rpois( length(Nsmall), Nsmall * D/N)
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
show_topals(fit, hue='purple')
show_topals(fit, emphasize_sd = TRUE, hue='purple')
# generate 1000 draws from the log mortality schedule
C = t(chol( fit$covar) )
lambda_sim = fit$std +
fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
# plot the first 10 draws
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
esim = apply(lambda_sim,2, e0)
plot(density(esim , adj=1.5),
xlab='Life Exp at Birth',
main='Approx Uncertainty in Estimated Life Expectancy')
abline(v=77.42, lty=2)  # HMD life exp value
target_pop = 5000
Nsmall = N * target_pop/sum(N)
Dsmall = rpois( length(Nsmall), Nsmall * D/N)
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
show_topals(fit, hue='purple')
show_topals(fit, emphasize_sd = TRUE, hue='purple')
# generate 1000 draws from the log mortality schedule
C = t(chol( fit$covar) )
lambda_sim = fit$std +
fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
# plot the first 10 draws
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
esim = apply(lambda_sim,2, e0)
plot(density(esim , adj=1.5),
xlab='Life Exp at Birth',
main='Approx Uncertainty in Estimated Life Expectancy')
abline(v=77.42, lty=2)  # HMD life exp value
target_pop = 25000
Nsmall = N * target_pop/sum(N)
Dsmall = rpois( length(Nsmall), Nsmall * D/N)
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
show_topals(fit, hue='purple')
show_topals(fit, emphasize_sd = TRUE, hue='purple')
# generate 1000 draws from the log mortality schedule
C = t(chol( fit$covar) )
lambda_sim = fit$std +
fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
# plot the first 10 draws
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
esim = apply(lambda_sim,2, e0)
plot(density(esim , adj=1.5),
xlab='Life Exp at Birth',
main='Approx Uncertainty in Estimated Life Expectancy')
abline(v=77.42, lty=2)  # HMD life exp value
target_pop = 20000
Nsmall = N * target_pop/sum(N)
Dsmall = rpois( length(Nsmall), Nsmall * D/N)
fit = TOPALS_fit(Nsmall, Dsmall, std,
age_group_bounds = bb,
details=TRUE)
show_topals(fit, hue='purple')
show_topals(fit, emphasize_sd = TRUE, hue='purple')
# generate 1000 draws from the log mortality schedule
C = t(chol( fit$covar) )
lambda_sim = fit$std +
fit$B %*% (fit$alpha + C %*% matrix(rnorm(1000*7), nrow=7))
# plot the first 10 draws
matplot(0:99, lambda_sim[,1:10], type='l', main='10 simulated draws', ylim=c(-10,0))
esim = apply(lambda_sim,2, e0)
plot(density(esim , adj=1.5),
xlab='Life Exp at Birth',
main='Approx Uncertainty in Estimated Life Expectancy')
abline(v=77.42, lty=2)  # HMD life exp value
?source
